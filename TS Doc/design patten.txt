1. Creational - Create object
2. Behhavioursal - design behaviour & interaction of two different object
3. Structural  - how the object composed. like inheritance and interface


1. Creational 
		a. prototype
		b. builder
		c. singleton
		d. factory

		a. Prototype
			a. A fully initialized instance to be copied or cloned (Ex:chess game- has initial stepup).
		b. Builder
			Seperates object construction from the its representation

		c. Singleton
			A Class of which only a single instance can exist.
		
		d. factory
			class creation based on the condition and return back (return person if(m) return male;else return female;)


2. Structural
		a. Proxy
		b. Decorator
		c. Facade
		d. Adapter
		e. Flyweight

		a. Proxy- An object repersenting or imposed another object (Ex:Credit card is a proxy for our back account)
		b. Decorator- add responsibilities to objects dynamically and easy to add behavior at runtime
		c. Facade - A single class that represents an entire sub system
		d. Adapter - Match Interfaces of different classes	(Adapter like different mobile from US)
		e. Flyweight- a fine - grained instance used for efficient sharing (create object once used then clear value and set new values) 

3. Behavioural
		a. Chain of responsibility - A way of passing a request between a chain of objects (like workflow or Exception handling)
		b. Iterator - Sequentially access the elements of a collection (next/Previous button tv remote)
		c. State - Alter an object behavior when its state changes (Ex:Fan Wall control) 
		d. Strategy - Encapsulates an algorithm inside a class (Ex:sorting, compareobject)
		e. Observer - A way of notifying change to a number of classes
		f. Visitor - Defines a new operation to a class without change
		g. Template Method - Defer the exact steps of an algorithm to a subclass
		h. Command - Encapsulate a command request as an object
		i. Memento - Capture and restore an object interal state(Undo/redo operation) 
		j. Mediator - Defines simplified communication b/w classes

	
	
